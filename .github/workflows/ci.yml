name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_pass
        ports:
          - 5432:5432  # Критически важно!
        options: >-
          --health-cmd "pg_isready -h postgres -U test_user -d test_db"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Wait for PostgreSQL
        run: |
          echo "Waiting for PostgreSQL to start..."
          for i in {1..15}; do
            pg_isready -h localhost -U test_user -d test_db && echo "PostgreSQL ready!" && exit 0
            echo "Attempt $i/15 - PostgreSQL not ready"
            sleep 2
          done
          echo "PostgreSQL failed to start!"
          exit 1
        env:
          PGPASSWORD: test_pass

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install coverage bandit ruff black

      - name: Run tests with coverage
        env:
          DB_HOST: localhost  # Теперь правильно!
          DB_NAME: test_db
          DB_USER: test_user
          DB_PASSWORD: test_pass
          SECRET_KEY: 'test-secret-key'
          DEBUG: 'False'
        run: |
          coverage run manage.py test
          coverage report --fail-under=80

      - name: Run security checks
        run: bandit -r .

      - name: Run ruff
        run: ruff check .

      - name: Run black
        run: black --check .